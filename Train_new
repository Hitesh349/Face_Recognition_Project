import cv2
weights = self.find_dnn_file("dnn/{caffemodel name}.caffemodel", required=False)
config = self.find_dnn_file("dnn/{prototxt name}.prototxt", required=False)
if weights is None or config is None:
    raise Exception("Missing DNN test files (dnn/caffemodel name.{prototxt/caffemodel}). Verify OPENCV_DNN_TEST_DATA_PATH configuration parameter.")
# Use OpenCV to Instantiate Caffe2 Model
model = cv2.dnn_DetectionModel(weights, config)
model.setInputParams(size=(224, 224), mean=(0, 0, 0), scale=1.0)

# set output layer for forward pass
outputLayer = "detection_out"

# Evaluate Memory Consumption
weightsMemory, blobsMemory = model.getMemoryConsumption((1,3,224,224))
# calculate FLOPS
flops = model.getFLOPS((1,3,224,224))
model.forward(outputLayer)
print("Memory consumption:")
print("    Weights(parameters): ", (weightsMemory + (1<<20) - 1) / (1<<20), " Mb")
print("    Blobs: ", (blobsMemory + (1<<20) - 1) / (1<<20), " Mb")
print("Calculation complexity: ", flops * 1e-9, " GFlops")

